---
import { parseType } from "@/util/parseType";
import { Code } from "astro:components";
import {
    descriptionClassesByLevel,
    type ReferenceEntryProps,
    titleClassesByLevel,
} from "./ReferenceEntry.astro";
import ReferenceLink from "./ReferenceLink.astro";

type Props = ReferenceEntryProps;

const { name, type, level = 0 } = Astro.props;

const parseParms = (type: any) => {
    const parameters = type.parameters ?? [];
    let functionParams: string[] = [];

    parameters.forEach((p: any) => {
        functionParams.push(
            `${p.name}${p.questionToken ? "?" : ""}:  ${
                parseType(p.type.kind, p)
            }`,
        );
    });

    return functionParams.join(", ");
};

const parseReturnType = (type: any) => {
    if (name === "kaboom") {
        return "";
    }

    return parseType(type.type.kind, type);
};
---

<h1 class:list={[titleClassesByLevel[level]]}>
    <span class="font-medium">{name}<span class="font-medium">(</span><span>{
            parseParms(type)
        }</span><span class="font-medium">)</span><span class="font-medium"
        >:</span>
    </span>

    <ReferenceLink href={`#${parseReturnType(type)}`}>
        {parseReturnType(type)}
    </ReferenceLink>
</h1>
